<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize variables
dir = -1; // -1 move left, 1 move right
movespeed = 3;
grav = 0.2;
hsp = 0;
vsp = 0;
ledge_awareness = 1; // variable to set enemies to not go off edge
hit_box_w = 32;
hit_box_h = 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Enemy movement logic
hsp = dir * movespeed;
vsp += grav;

// Horizontal Collision Check
if (place_meeting(x+hsp, y, obj_block))
{ // check to see if we are about to collide hori
    while (!place_meeting(x+sign(hsp),y,obj_block))
    { // check if 1 px to right | left is not a wall do code below
        x += sign(hsp);
    }
    hsp = 0;
    dir *= -1; // switch direction
}
x += hsp;

// Vertical Collision Check
if (place_meeting(x, y+vsp, obj_block))
{ // check to see if we are about to collide vert with block
    while (!place_meeting(x,y+sign(vsp),obj_block))
    { // check if 1 px to below is not a wall do code below
        y += sign(vsp);
    }
    vsp = 0;
    if (ledge_awareness) &amp;&amp; !position_meeting(x+(hit_box_w/2)*(dir), y+(hit_box_h/2)+8, obj_block)
    {
        dir *= -1;
    }
}
y += vsp;

// Enemy Collision
if (place_meeting(x,y,obj_player))
{
    if (obj_player.y &lt; y-16)
    { // check if we are colliding from the top
        with(obj_player) vsp = -jumpspeed; // bounce off enemy
        instance_destroy(); // destroy enemy
    }
    else
    {
        game_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
